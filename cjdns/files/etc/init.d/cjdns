#!/bin/sh /etc/rc.common
#
# You may redistribute this program and/or modify it under the terms of
# the GNU General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

START=90
STOP=85

CJDROUTE="/usr/sbin/cjdroute"
CONF="/etc/cjdroute.conf"

# Kill hoard of cjdns + cprocs w/o suicide..such hack
PID_HOARD="$( pgrep -f $CJDROUTE)                     \
	    $(pgrep -f S${START}cjdns)                \
	    $(pgrep -f '/etc/init.d/cjdns start')     \
	    $(pgrep -f '/etc/init.d/cjdns boot')"

for PID in $PID_HOARD; do
	# Prevent suicide
	[ "$PID" == "$$" ] && continue
	# Prevent infanticide
	[ "$PID" == $(($$ - 1)) ] && continue
	# New variable holds all pids to kill
	[ ! "$PID2KILL" ]  && PID2KILL="$PID"         \
			   || PID2KILL="$PID2KILL $PID"

done

nat6()
{
	[ "$1" == "on" ] \
		&& H="A" \
		|| H="D"
	# [ ] Todo Check if we are using tun0 not cjdns0, and remove hard-code nonsense.
	ip6tables -t nat    -${H} POSTROUTING -o tun0 -j MASQUERADE
	ip6tables -t filter -${H} FORWARD -i tun0 -o br-lan -m state --state RELATED,ESTABLISHED -j ACCEPT
	ip6tables -t filter -${H} FORWARD -i eth1 -o br-lan -j ACCEPT
}

stop()
{
	if [ -z "$PID2KILL" ]; then
		logger "cjdns is not running"
		return 0
	else
		logger -t cjdns -p1 "Killing all related cjdns/cjdroute2 pids: $PID2KILL"
		kill -9 ${PID2KILL} 2>/dev/null

		# [ ] Todo Check if NAT6 is on/off
		nat6 off
	fi
}

cjdhammer()
{
	(
	while : ; do
		logger -t cjdns "Starting cjdns in child process cjdhammer()"
		# TODO: socat exec:"$CJDROUTE < $CONF" UDP4-DATAGRAM:192.168.100.100:1073
		cjdrouteconf get | cjdroute
		sleep 2

	done
	)
}

start()
{
	touch /etc/config/cjdns
	uci show cjdns | grep ipv6 > /dev/null
	if [ $? -ne 0 ]; then
		logger -t cjdns "cjdns.cjdns.ipv6 not set, generating new config"
		cjdroute --genconf | cjdroute --cleanconf | cjdrouteconf set
		lua /usr/share/cjdns/setup_peering.lua
		uci commit
	fi

	# Starts a 'Crashey' process for infinity.
	if [ -z "$PID2KILL" ]; then

		cjdhammer &

		# [ ] Todo Check if NAT6 is on/off
		nat6 on

	else
		logger -t cjdns -p2 "cjdns is detected as running at proccess: $PID2KILL"
		# for x in $PID2KILL; do ps | grep ^.$x | logger ; done
		return 1
	fi
}

# Keep this to prevent ~2sec race condition
restart()
{
	/etc/init.d/cjdns stop
	/etc/init.d/cjdns start
}
