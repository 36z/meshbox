--- a/contrib/lua/cjdns/config.lua
+++ b/contrib/lua/cjdns/config.lua
@@ -39,7 +39,7 @@
 end
 
 function ConfigFile:parse()
-    local obj, pos, err = djkson.decode(self.text)
+    local obj, pos, err = dkjson.decode(self.text)
     assert(err == nil, err) -- If there is an error, die and print it
 
     self.contents = obj
@@ -50,7 +50,7 @@
     -- table contents, since Lua does not distinguish between [] and {}
 
     path = path or self.path
-    local savetext = assert(djkson.encode(self.contents, { indent = true }))
+    local savetext = assert(dkjson.encode(self.contents, { indent = true }))
 
     local f = assert(io.open(path, 'w'))
     f:write(savetext)

--- a/contrib/lua/cjdns/init.lua
+++ b/contrib/lua/cjdns/init.lua
@@ -2,7 +2,7 @@
 -- Written by Philip Horger
 
 bencode = require "bencode" -- https://bitbucket.org/wilhelmy/lua-bencode/
-djkson  = require "djkson"  -- http://dkolf.de/src/dkjson-lua.fsl/home
+dkjson  = require "dkjson"  -- http://dkolf.de/src/dkjson-lua.fsl/home
 socket  = require "socket"  -- http://w3.impa.br/~diego/software/luasocket/
 sha2    = require "sha2"    -- https://code.google.com/p/sha2/

